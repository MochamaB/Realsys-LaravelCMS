<div class="grid-stack gs-12 grid-stack-animate ui-droppable" gs-current-row="4"
    style="--gs-item-margin-top: 5px; --gs-item-margin-bottom: 5px; --gs-item-margin-right: 5px; --gs-item-margin-left: 5px; --gs-column-width: 8.333333333333334%; --gs-cell-height: 50px; height: 200px;">
    <div class="grid-stack-item ui-resizable-autohide">
        <div class="grid-stack-item-content">regular item</div>
        <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
    </div>
    <div class="grid-stack-item size-to-content grid-stack-sub-grid ui-resizable-autohide" gs-x="1" gs-w="4" gs-h="3"
        gs-size-to-content="true"
        style="left: var(--gs-column-width); width: calc(4 * var(--gs-column-width)); height: calc(3 * var(--gs-cell-height));">
        <div class="grid-stack-item-content">
            <div>nested grid sizeToContent:true with some header content</div>
            <div class="grid-stack sub1 gs-4 grid-stack-nested ui-droppable" gs-current-row="2"
                style="--gs-item-margin-top: 5px; --gs-item-margin-bottom: 5px; --gs-item-margin-right: 5px; --gs-item-margin-left: 5px; --gs-column-width: 25%; --gs-cell-height: 50px; min-height: 100px;">
                <div class="grid-stack-item ui-resizable-autohide">
                    <div class="grid-stack-item-content">0</div>
                    <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
                </div>
                <div class="grid-stack-item ui-resizable-autohide" gs-x="1" style="left: var(--gs-column-width);">
                    <div class="grid-stack-item-content">1</div>
                    <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
                </div>
                <div class="grid-stack-item ui-resizable-autohide" gs-x="2"
                    style="left: calc(2 * var(--gs-column-width));">
                    <div class="grid-stack-item-content">2</div>
                    <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
                </div>
                <div class="grid-stack-item ui-resizable-autohide" gs-x="3"
                    style="left: calc(3 * var(--gs-column-width));">
                    <div class="grid-stack-item-content">3</div>
                    <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
                </div>
                <div class="grid-stack-item ui-resizable-autohide" gs-y="1" style="top: var(--gs-cell-height);">
                    <div class="grid-stack-item-content">4</div>
                    <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
                </div>
                <div class="grid-stack-item ui-resizable-autohide" gs-x="1" gs-y="1"
                    style="top: var(--gs-cell-height); left: var(--gs-column-width);">
                    <div class="grid-stack-item-content">5</div>
                    <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
                </div>
            </div>
        </div>
        <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
    </div>
    <div class="grid-stack-item ui-resizable-autohide grid-stack-sub-grid" gs-x="5" gs-w="3" gs-h="4"
        style="left: calc(5 * var(--gs-column-width)); width: calc(3 * var(--gs-column-width)); height: calc(4 * var(--gs-cell-height));">
        <div class="grid-stack-item-content">
            <div class="grid-stack sub2 gs-3 grid-stack-nested ui-droppable" gs-current-row="2"
                style="--gs-item-margin-top: 5px; --gs-item-margin-bottom: 5px; --gs-item-margin-right: 5px; --gs-item-margin-left: 5px; --gs-column-width: 33.333333333333336%; --gs-cell-height: 50px; min-height: 100px;">
                <div class="grid-stack-item ui-resizable-autohide" gs-h="2"
                    style="height: calc(2 * var(--gs-cell-height));">
                    <div class="grid-stack-item-content">6</div>
                    <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
                </div>
                <div class="grid-stack-item ui-resizable-autohide" gs-x="1" gs-w="2"
                    style="left: var(--gs-column-width); width: calc(2 * var(--gs-column-width));">
                    <div class="grid-stack-item-content">7</div>
                    <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
                    <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
                </div>
            </div>
        </div>
        <div class="ui-resizable-handle ui-resizable-se" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-e" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-s" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-sw" style="z-index: 100; user-select: none;"></div>
        <div class="ui-resizable-handle ui-resizable-w" style="z-index: 100; user-select: none;"></div>
    </div>
</div>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Nested grids demo</title>
  <link rel="stylesheet" href="demo.css"/>
  <script src="../node_modules/gridstack/dist/gridstack-all.js"></script>
</head>
<body>
  <div class="container-fluid">
    <h1>Nested grids demo</h1>
    <p>This example shows v5.x dragging between nested grids (dark yellow) and parent grid (bright yellow.)<br>
      Use v9.2 <b>sizeToContent:true</b> on first subgrid item parent to grow/shrink as needed, while leaving leaf green items unchanged.<br>
      Uses v3.1 API to load the entire nested grid from JSON.<br>
      Nested grids uses v5 <b>column:'auto'</b> to keep items same size during resize.</p>
    <div class="actions" style="display: flex; flex-direction: row; gap: 5px;">
      <a class="btn btn-primary" onClick="addWidget()" href="#">Add Widget</a>
      <a class="btn btn-primary" onClick="addNewWidget('.sub1')" href="#">Add Widget Grid1</a>
      <a class="btn btn-primary" onClick="addNewWidget('.sub2')" href="#">Add Widget Grid2</a>
      <a class="btn btn-primary" onClick="addNested()" href="#">Add Nested Grid</a>
      <!-- add .grid-stack-item for acceptWidgets:true -->
      <div class="sidebar-item grid-stack-item">Drag nested</div>
    </div>
    <br />
    <div>
      <span>Grid Mode: </span>
      <input type="radio" id="static" name="mode" value="true" onClick="setStatic(true)"><label for="static">static</label>
      <input type="radio" id="edit" name="mode" value="false" checked onClick="setStatic(false)"><label for="edit">editable</label>
    </div>
    <span>entire save/re-create:</span>
    <a class="btn btn-primary" onClick="save()" href="#">Save</a>
    <a class="btn btn-primary" onClick="destroy()" href="#">Destroy</a>
    <a class="btn btn-primary" onClick="load()" href="#">Create</a>
    <span>partial save/load:</span>
    <a class="btn btn-primary" onClick="save(true, false)" href="#">Save list</a>
    <a class="btn btn-primary" onClick="save(false, false)" href="#">Save no content</a>
    <a class="btn btn-primary" onClick="destroy(false)" href="#">Clear</a>
    <a class="btn btn-primary" onClick="load(false)" href="#">Load</a>
    <br><br>
    <!-- grid will be added here -->
  </div>
  <script src="events.js"></script>
  <script type="text/javascript">
    // NOTE: REAL apps would sanitize-html or DOMPurify before blinding setting innerHTML. see #2736
    GridStack.renderCB = function(el, w) {
      if (w.content) el.innerHTML = w.content;
    };

    let staticGrid = false;
    let sub1 = [ {x:0, y:0}, {x:1, y:0}, {x:2, y:0}, {x:3, y:0}, {x:0, y:1}, {x:1, y:1}];
    let sub2 = [ {x:0, y:0, h:2}, {x:1, y:1, w:2}];
    let count = 0;
    [...sub1, ...sub2].forEach(d => d.content = String(count++));
    let options = { // main grid options
      staticGrid, // test - force children to inherit too if we set to true above ^^^
      // disableDrag: true,
      // disableResize: true,
      cellHeight: 50,
      margin: 5,
      minRow: 2, // don't collapse when empty
      acceptWidgets: true,
      id: 'main',
      resizable: { handles: 'se,e,s,sw,w'},
      // subGridOpts, // options for all subgrids, but defaults to column='auto' now so no need.
      children: [
        {x:0, y:0, content: 'regular item'},
        {x:1, y:0, w:4, h:4, sizeToContent: true, content: '<div>nested grid sizeToContent:true with some header content</div>', subGridOpts: {children: sub1, id:'sub1_grid', class: 'sub1'}},
        {x:5, y:0, w:3, h:4, subGridOpts: {children: sub2, id:'sub2_grid', class: 'sub2'}},
      ]
    };

    // create and load it all from JSON above
    let grid = GridStack.addGrid(document.querySelector('.container-fluid'), options);

    // add debug event handlers to main grid (new v12.1 handles sub-grids too)
    addEvents(grid);

    // setup drag drop behavior
    let sidebarContent = [
     { w:2, h:2, subGridOpts: { children: [{content: 'nest 1'}, {content: 'nest 2'}]}}
    ];
    GridStack.setupDragIn('.sidebar-item', undefined, sidebarContent);

    function setStatic(val) {
      staticGrid = val;
      grid.setStatic(staticGrid);
    }

    function addWidget() {
      grid.addWidget({x:0, y:100, content:"new item"});
    }

    function addNested() {
      grid.addWidget({x:0, y:100, sizeToContent: true, subGridOpts: {
        children: [ {content: 'hello'}, {y:1, content: 'world'}],
        ...subOptions}
      });
    }

    function addNewWidget(selector) {
      let subGrid = document.querySelector(selector).gridstack;
      let node = {
        x: Math.round(6 * Math.random()),
        y: Math.round(5 * Math.random()),
        w: Math.round(1 + 1 * Math.random()),
        h: Math.round(1 + 1 * Math.random()),
        content: String(count++)
      };
      subGrid.addWidget(node);
      return false;
    };

    //--- end of Drag and Drop Nested widget logic

    function save(content = true, full = true) {
      options = grid.save(content, full);
      console.log(options);
      // console.log(JSON.stringify(options));
    }
    function destroy(full = true) {
      if (full) {
        grid.off('dropped');
        grid.destroy();
        grid = undefined;
      } else {
        grid.removeAll();
      }
    }
    function load(full = true) {
      if (full) {
        grid = GridStack.addGrid(document.querySelector('.container-fluid'), options);
      } else {
        grid.load(options);
      }
    }
  </script>
</body>
</html>
